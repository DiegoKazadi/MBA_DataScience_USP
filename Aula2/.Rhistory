library("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(readxl)
dataset_inicial <- read_excel("(1.2) Dataset Aula Data Wrangling.xls")
dataset_merge <- read_excel("(1.3) Dataset Aula Data Wrangling (Join).xls")
View(dataset_inicial)
View(dataset_merge)
novos_nomes <- c("Observações",
"Tempo para chegar",
"Distância percorrida",
"Semáforos",
"Período",
"Perfil")
print(novos_nomes)
names(dataset_inicial) <- novos_nomes
head(dataset_inicial, n=5)
nova_base <- rename(dataset_inicial,
observacoes = Observações,
tempo = "Tempo para chegar",
distancia = "Distância percorrida",
semaforos = "Semáforos",
periodo = "Período",
perfil = "Perfil")
View(nova_base)
nova_base %>% rename(obs = observacoes,
temp = tempo,
dist = distancia,
sem = semaforos,
per = periodo,
perf = perfil)
descritivas_nova_base <- summarise(nova_base,
observações=n(),
média=mean(tempo),
mediana=median(tempo),
desv_pad=sd(tempo),
mínimo=min(tempo),
máximo=max(tempo),
quartil_3=quantile(tempo, type=5, 0.75))
print(descritivas_nova_base)
View(descritivas_nova_base)
base_grupo <- group_by(nova_base, periodo)
View(base_grupo)
View(nova_base)
View(nova_base)
descritivas_base_grupo <- base_grupo %>% summarise(
média=mean(tempo),
desvio_pad=sd(tempo),
n_obs=n())
base_sem_grupo <- base_grupo %>% ungroup () %>% droplevels(.)
View(descritivas_nova_base)
View(nova_base)
View(dataset_merge)
View(descritivas_nova_base)
View(descritivas_base_grupo)
summarise(base_sem_grupo,
mean(tempo)) # informações para a base completa
nova_base_grupos <- nova_base %>% group_by(periodo, perfil) %>%
summarise(tempo_médio = mean(tempo),
mínimo = min(tempo),
máximo = max(tempo),
contagem = n()) %>%
arrange(desc(máximo))
filtro_1 <- nova_base[nova_base$tempo > 20,] # critérios antes da vírgula
filtro_2 <- nova_base[nova_base$tempo > 20 & nova_base$distancia < 25,]
filtro_5 <- nova_base[nova_base$tempo <=15 | nova_base$periodo == "Tarde",]
View(filtro_1)
View(filtro_2)
base_filtro_1 <- filter(nova_base, tempo > 20)
base_filtro_2 <- filter(nova_base, tempo > 20 & distancia < 25)
base_filtro_3 <- filter(nova_base, periodo == "Manhã")
base_filtro_4 <- filter(nova_base, periodo != "Manhã" & between(tempo, 20, 50))
base_filtro_5 <- filter(nova_base, tempo <= 15 | periodo == "Tarde")
base_filtro_6 <- filter(nova_base, tempo > mean(tempo, na.rm = TRUE))
View(base_filtro_1)
base_filtro_7 <- nova_base %>% group_by(periodo) %>%
filter(tempo > mean(tempo, na.rm=TRUE)) %>%
ungroup () %>% droplevels(.)
View(base_filtro_7)
nova_base %>% slice(5:9) # com base na posição das linhas
nova_base %>% slice_head(n=3) # as três primeiras linhas
nova_base %>% slice_tail(n=3) # as três últimas linhas
nova_base %>% slice_min(order_by = distancia, prop = 0.40) # os prop % menores
nova_base %>% slice_max(order_by = distancia, prop = 0.10) # os prop % maiores
dataset_inicial <- dataset_inicial %>% rename(observacoes=Observações)
dataset_merge <- dataset_merge %>% rename(observacoes=Estudante)
View(base_left_join)
dataset_inicial <- dataset_inicial %>% rename(observacoes=Observações)
dataset_merge <- dataset_merge %>% rename(observacoes=Estudante)
dataset_inicial <- dataset_inicial %>% rename(observacoes=Observações)
dataset_merge <- dataset_merge %>% rename(observacoes=Estudante)
base_filtro_7 <- nova_base %>% group_by(periodo) %>%
filter(tempo > mean(tempo, na.rm=TRUE)) %>%
ungroup () %>% droplevels(.)
nova_base %>% slice(5:9) # com base na posição das linhas
nova_base %>% slice_head(n=3) # as três primeiras linhas
nova_base %>% slice_tail(n=3) # as três últimas linhas
nova_base %>% slice_min(order_by = distancia, prop = 0.40) # os prop % menores
nova_base %>% slice_max(order_by = distancia, prop = 0.10) # os prop % maiores
base_right_join <- right_join(dataset_inicial, dataset_merge,
by = "observacoes")
dataset_inicial %>% right_join(dataset_merge, by = "observacoes")
base_inner_join <- inner_join(dataset_inicial, dataset_merge,
by = "observacoes")
View(base_inner_join)
base_full_join <- full_join(dataset_inicial, dataset_merge,
by = "observacoes")
View(base_full_join)
base_semi_join <- semi_join(dataset_inicial, dataset_merge,
by = "observacoes")
View(base_semi_join)
base_anti_join <- anti_join(dataset_inicial, dataset_merge,
by = "observacoes")
View(base_anti_join)
View(base_inner_join)
View(base_semi_join)
View(base_anti_join)
dataset_bind_1 <- tibble(var1 = c("obs1", "obs2", "obs3", "obs4"),
var2 = 1:4,
var3 = 10:13)
dataset_bind_2 <- tibble(var4 = c("obs1", "obs2", "obs3", "obs4"),
var5 = 100:103)
dataset_bind_3 <- tibble(var6 = c("obs50", "obs51", "obs52", "obs53"),
var7 = 1500:1503)
dataset_bind_4 <- tibble(var1 = c("obs5", "obs6", "obs7", "obs8", "obs9"),
var2 = 5:9,
var3 = 14:18)
View(dataset_bind_1)
dataset_bind_colunas <- bind_cols(dataset_bind_1, dataset_bind_2)
View(dataset_bind_colunas)
dataset_bind_1 %>% bind_cols(dataset_bind_3)
dataset_bind_linhas <- bind_rows(dataset_bind_1, dataset_bind_4)
return(atual)
dataset_bind_linhas <- bind_rows(dataset_bind_1, dataset_bind_4)
View(dataset_bind_linhas)
base_covid <- read.csv("(2.2) WHO COVID-19 Global Table.csv",
header = TRUE,
sep = ",",
dec = ".")
dim(base_covid)
names(base_covid)
base_covid <- base_covid %>% rename(nome = 1,
regiao = 2,
casos_total = 3,
casos_relativo = 4,
casos_semana = 5,
casos_semana_relativo = 6,
casos_dia = 7,
mortes_total = 8,
mortes_relativo = 9,
mortes_semana = 10,
mortes_semana_relativo = 11,
mortes_dia = 12,
tipo_transmissao = 13)
names(base_covid)
table(base_covid$tipo_transmissao)
unique(base_covid$tipo_transmissao)
base_covid <- base_covid[-c(1),] # excluída pelo número de sua linha
base_covid <- base_covid[!(base_covid$nome=="Other"),] # excluída por seu nome
base_covid <- base_covid %>% mutate(tipo_transmissao = recode(tipo_transmissao,
"Clusters of cases" = "Casos Concentrados",
"Community transmission" = "Transmissão Comunitária",
"No cases" = "Sem Casos",
"Not applicable" = "Não Aplicável",
"Pending" = "Pendente",
"Sporadic cases" = "Casos Esporádicos")) %>%
mutate(grupos = cut(casos_relativo,
c(-Inf, quantile(base_covid$casos_relativo,
type = 5,
probs = c(0.25, 0.50, 0.75),
TRUE),Inf),
c("primeiro quartil",
"segundo quartil",
"terceiro quartil",
"quarto quartil")))
table(base_covid$grupos)
base_covid <- base_covid %>% select(nome,
regiao,
grupos,
everything(),
-mortes_dia)
base_quartis <- base_covid %>% group_by(grupos) %>%
summarise(média=mean(casos_relativo, na.rm = T),
desvio_padrão=sd(casos_relativo, na.rm = T),
obs.=n()) %>%
ungroup () %>% droplevels(.)
base_regiao <- base_covid %>% group_by(regiao) %>%
summarise(média=mean(casos_relativo, na.rm = T),
desvio_padrão=sd(casos_relativo, na.rm = T),
obs.=n()) %>%
ungroup () %>% droplevels(.)
library(readxl)
PIB2019 <- read_excel("(2.3) WBD PIB per Capita.xls")
base_covid_2 <- PIB2019 %>% rename(nome="Country Name") %>%
right_join(base_covid, by = "nome") %>%
select(everything(), -`Country Code`) %>%
rename(grupo_renda="Income group") %>%
mutate(grupo_renda = recode(grupo_renda,
"High income" = "PIB Muito Elevado",
"Upper middle income" = "PIB Elevado",
"Lower middle income" = "PIB Baixo",
"Low income" = "PIB Muito Baixo"))
base_renda <- base_covid_2 %>% group_by(grupo_renda) %>%
summarise(média=mean(casos_relativo, na.rm = T),
desvio_padrão=sd(casos_relativo, na.rm = T),
obs.=n()) %>%
ungroup () %>% droplevels(.)
base_covid_2 %>% group_by(grupo_renda) %>%
summarise(média=mean(casos_relativo, na.rm = T),
desvio_padrão=sd(casos_relativo, na.rm = T),
obs.=n()) %>% ungroup () %>% droplevels(.) %>%
ggplot() +
geom_col(aes(x=grupo_renda, y=média), fill="orange") +
labs(x = "Grupo de Renda",
y = "Média de Casos Relativos",
title = "Análise Casos Covid")
head(base_texto_2)
nova_base %>% rename(sem = 4,
perf = 6)
str(nova_base)
dim(nova_base)
group(nova_base)
names(nova_base)
glim(nova_base)
glimpse(nova_base)
library(readxl)
dataset_inicial <- read_excel("(1.2) Dataset Aula Data Wrangling.xls")
dataset_merge <- read_excel("(1.3) Dataset Aula Data Wrangling (Join).xls")
